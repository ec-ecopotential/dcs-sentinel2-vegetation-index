#!/bin/bash

# source the ciop functions (e.g. ciop-log, ciop-getparam)
source ${ciop_job_include}

set -x 

# define the exit codes
SUCCESS=0
ERR_NO_RESOLUTION=5
ERR_DOWNLOAD_1C=10
ERR_GRANULE_DIR=15
ERR_SEN2COR=20
ERR_LEVEL_2A_DIR=25
ERR_COMPRESSION=30
ERR_PUBLISH=35

# add a trap to exit gracefully
function cleanExit ()
{
  local retval=$?
  local msg=""
  case "${retval}" in
    ${SUCCESS}) msg="Processing successfully concluded";;
    ${ERR_NO_RESOLUTION}) msg="No target resolution provided, must be one of 10, 20 or 60";;
    ${ERR_DOWNLOAD_1C}) msg="Failed to retrieve Sentinel-2 Level 1C product";;
    ${ERR_GRANULE_DIR}) msg="Couldn't find the Sentinel-2 Level 1C product granule directory";;
    ${ERR_SEN2COR}) msg="SEN2COR main binary L2A_Process failed";;
    ${ERR_LEVEL_2A_DIR}) msg="Couldn't find the Sentinel-2 Level 2A product";;
    ${ERR_COMPRESSION}) msg="Failed to compress the Sentinel-2 Level 2A product";;
    ${ERR_PUBLISH}) msg="Failed to publish the Sentinel-2 Level 2A product";;
    *) msg="Unknown error";;
  esac

  [ "${retval}" != "0" ] && ciop-log "ERROR" "Error ${retval} - ${msg}, processing aborted" || ciop-log "INFO" "${msg}"
  exit ${retval}
}

trap cleanExit EXIT

function setOTBenv() {
    
  . /etc/profile.d/otb.sh

  export otb_ram=2048
  export GDAL_DATA=/usr/share/gdal/
}

function setGDALEnv() {

  export GDAL_HOME=/opt/gdal-2.1
  export PATH=$GDAL_HOME/bin/:$PATH
  export LD_LIBRARY_PATH=$GDAL_HOME/lib/:$LD_LIBRARY_PATH
  export GDAL_DATA=$GDAL_HOME/share/gdal

}

function getGain() {

  local band=$1
  local product_id=$2

  gain=$( cat ${product_id}/*_MTL.txt | grep REFLECTANCE_MULT_BAND_${band} | cut -d "=" -f 2 | tr -d " " )

  echo ${gain}

}

function getOffset() {

  local band=$1
  local product_id=$2
 
  offset=$( cat ${product_id}/*_MTL.txt | grep REFLECTANCE_ADD_BAND_${band} | cut -d "=" -f 2 | tr -d " " )

  echo ${offset}

}

function DNtoReflectance() {

  local band=$1
  local base_name=$2

  gain=$( getGain ${band} ${base_name} )
  offset=$( getOffset ${band} ${base_name} )

  otbcli_BandMath \
    -il ${base_name}/${base_name}_B${band}.TIF \
    -exp "${gain} * im1b1 + ${offset}" \
    -out ${base_name}/REFLECTANCE_B${band}.TIF

  return $?
}

function calcVegetation() {
  local index=$1
  local s2l2a=$2
  local expression=""

# Band 1: B1, central wavelength 443 nm
# Band 2: B2, central wavelength 490 nm
# Band 3: B3, central wavelength 560 nm
# Band 4: B4, central wavelength 665 nm
# Band 5: B5, central wavelength 705 nm
# Band 6: B6, central wavelength 740 nm
# Band 7: B7, central wavelength 783 nm
# Band 8: B9, central wavelength 945 nm
# Band 9: B11, central wavelength 1610 nm
# Band 10: B12, central wavelength 2190 nm
# Band 11: B8A, central wavelength 865 nm
# Band 12: AOT, Aerosol Optical Thickness map (at 550nm)
# Band 13: CLD, Raster mask values range from 0 for high confidence clear sky to 100 for high confidence cloudy
# Band 14: SCL, Scene Classification
#  Categories:
#       0: NODATA
#       1: SATURATED_DEFECTIVE
#       2: DARK_FEATURE_SHADOW
#       3: CLOUD_SHADOW
#       4: VEGETATION
#       5: BARE_SOIL_DESERT
#       6: WATER
#       7: CLOUD_LOW_PROBA
#       8: CLOUD_MEDIUM_PROBA
#       9: CLOUD_HIGH_PROBA
#      10: THIN_CIRRUS
#      11: SNOW_ICE
# Band 15:  SNW, Raster mask values range from 0 for high confidence NO snow/ice to 100 for high confidence snow/ice
# Band 16:  WVP, Scene-average Water Vapour map
  
  case $index in
    NDVI)  
      # NDVI
      expression=" im1b7 > 0 && im1b7 <= 10000 && im1b4 > 0 && im1b4 <= 10000 ? ( im1b7 - im1b4 ) / ( im1b7 + im1b4 ) : -999 "
      ;; 

    NDI45) 
      # NDI45
      expression=" im1b5 > 0 && im1b5 <= 10000 && im1b4 > 0 && im1b4 <= 10000 ? ( im1b5 - im1b4 ) / ( im1b5 + im1b4 ) : -999 " 
      ;;  
    MTCI)
      # MTCI
      expression=" im1b5 >= 0 && im1b5 <= 10000 && im1b4 >= 0 && im1b4 <= 10000 && im1b6 >= 0 && im1b6 && im1b5 - im1b4 != 0 ? ( im1b6 - im1b5 ) / ( im1b5 - im1b4 ) : 0  "
      ;; 
   MCARI)
      #MCARI
      expression=' im1b5 >= 0 && im1b5 <= 10000 && im1b4 >= 0 && im1b4 <= 10000 && im1b3 >= 0 && im1b3 <= 10000 ? (( im1b5 - im1b4 )/10000 - 0.2*( im1b5 - im1b3 )/10000)*( im1b5 - im1b4 ) /10000 : 0 '
      ;;
   GNDVI)
      #GNDVI
      expression=" im1b7 >= 0 && im1b7 <= 10000 && im1b3 >= 0 && im1b3 <= 10000 ? ( im1b7 - im1b3 ) / ( im1b7 + im1b3 ) : 0 " 
      ;;
   PSSRa)
      #PSSRa
      expression=" im1b7 >= 0 && im1b7 <= 10000 && im1b4 >= 0 && im1b4 <= 10000 && im1b4 != 0 ? im1b7 / im1b4 : 0 " 
      ;;
   S2REP)
      #S2REP
      expression=' im1b7 >= 0 && im1b7 <= 10000 && im1b4 >= 0 && im1b4 <= 10000 && im1b5 >= 0 && im1b5 <= 10000 && im1b6 >= 0 && im1b6 <= 10000 ? 705 + 35*(((( im1b7 + im1b4 ) / ( 2*10000 ) - im1b5 / 10000 ) / ( im1b6 - im1b5 ) /10000))  : 0 ' 
      ;;
   IRECI)
     #IRECI
     expression=" im1b7 >= 0 && im1b7 <= 10000 && im1b4 >= 0 && im1b4 <= 10000 && im1b6 >= 0 && im1b6 <= 10000 && im1b6 != 0 && im1b5 != 0 ? (( im1b7 - im1b4 )/10000) / ( im1b5 / im1b6 ) : 0 " 
     ;;   
   CLD)
     # Raster mask values range from 0 for high confidence clear sky to 100 for high confidence cloudy
     # this is not a vegetation index 
     expression=" im1b13 "
     ;;
   SCL)
     # Scene Classification
     # this is not a vegetation index
     expression=" im1b14 "
     ;;
   SNW)
     # Raster mask values range from 0 for high confidence NO snow/ice to 100 for high confidence snow/ice
     # this is not a vegetation index
     expression=" im1b15 "
     ;;
   WVP)
     # Scene-average Water Vapour map
     # this is not a vegetation index
     expression=" im1b16 / 10000"
     ;;
  *)
     return ${ERR_UNKNOWN_VI}
     ;;
  esac

  otbcli_BandMath \
    -il ${s2l2a}.TIF \
    -exp ${expression} \
    -out ${s2l2a}_${index}.TIF

}

function main() {

  # set OTB environment
  setOTBenv

  setGDALEnv

  cd ${TMPDIR}

  while read input
  do 
    ciop-log "INFO" "Retrieve Sentinel-2 Level 2A product ${input}"

    local_resource="$( echo ${input} | ciop-copy -z -O ${TMPDIR} - )"

    ciop-log "INFO" "Convert Sentinel-2 Level 2A product to geotiff"
   
    identifier=$( tar tfz ${local_resource} | head -n 1 | sed 's/.SAFE\///')

    tar xfz ${local_resource} || return ${ERR_EXTRACT}

    ciop-log "INFO" "Process vegetation indexes for ${identifier}"

    cd ${identifier}.SAFE

    metadata="$(  find . -maxdepth 1 -name "S2A*.xml" )"
 
    counter=0

    gdalinfo ${metadata} 2> /dev/null | grep -E  "SUBDATASET_._NAME" | grep -v "PREVIEW" | cut -d "=" -f 2 | while read subset
    do 
      ciop-log "INFO" "Process ${subset}"
      gdal_translate ${subset} ${identifier}_${counter}.TIF

      for index in NDVI NDI45 MTCI MCARI GNDVI PSSRa S2REP IRECI CLD SCL SNW WVP
      do 
     
        calcVegetation ${index} ${identifier}_${counter} || return ${ERR_CALC_VI}

      done
   
      rm -f ${identifier}_${counter}.TIF    
 
      # build gdal VRT will all vegetation indexes and selected single bands of Level 2A input product
      gdalbuildvrt \
        -separate \
        -q \
        -srcnodata "-999" \
        -vrtnodata "-999" \
        ${TMPDIR}/sen2vi.vrt \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_NDVI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_NDI45.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_MTCI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_MCARI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_GNDVI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_PSSRa.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_S2REP.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_IRECI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_CLD.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_SCL.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_SNW.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_WVP.TIF || return ${ERR_GDAL_VRT}

      xmlstarlet ed -L -a "/VRTDataset/VRTRasterBand[@band="1"]/NoDataValue" \
        -t elem -n "Description" -v "NDVI" \
       ${TMPDIR}/sen2vi.vrt

     gdalwarp \
      -r cubic \
      -wm 8192 \
      -multi \
      -srcnodata -999 \
      -dstnodata -999 \
      -wo OPTIMIZE_SIZE=TRUE \
      -wo UNIFIED_SRC_NODATA=YES \
      -co TILED=YES \
      -co COMPRESS=LZW \
      -t_srs EPSG:4326 \
      ${TMPDIR}/sen2vi.vrt \
      ${TMPDIR}/${identifier}_${counter}.TIF
      ciop-publish -m ${TMPDIR}/sen2vi.vrt
      
      rm -f ${TMPDIR}/sen2vi.vrt
  
      ciop-log "INFO" "Publish Level 2 product ${identifier}_${counter}.TIF"
      ciop-publish -m ${TMPDIR}/${identifier}_${counter}.TIF
   
      rm -fr ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}* 

      counter=$((counter+1))
    done
 
    cd ${TMPDIR}
    ciop-log "DEBUG" "Remove ${identifier}.SAFE"
    rm -fr ${identifier}.SAFE   
  done

}

cat | main || exit $?
