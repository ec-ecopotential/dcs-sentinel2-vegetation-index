#!/bin/bash 

# streaming executable of sen2vi job template

# source the ciop functions (e.g. ciop-log, ciop-getparam)
source ${ciop_job_include}

# load the functions
source /application/sen2vi/lib/functions.sh

trap cleanExit EXIT

function main() {

  # set OTB environment
  setOTBenv

  setGDALEnv

  cd ${TMPDIR}

  while read input
  do 
    ciop-log "INFO" "Retrieve Sentinel-2 Level 2A product ${input}"

    local_resource="$( echo ${input} | ciop-copy -z -O ${TMPDIR} - )"

    [ -z "${local_resource}" ] && return ${ERR_NO_LOCAL}

    ciop-log "INFO" "Convert Sentinel-2 Level 2A product to geotiff"
   
    identifier=$( tar tfz ${local_resource} | head -n 1 | sed 's/.SAFE\///')

    [ -z "${identifier}" ] && return ${ERR_NO_IDENTIFIER}

    tar xfz ${local_resource} || return ${ERR_EXTRACT}

    ciop-log "INFO" "Process vegetation indexes for ${identifier}"

    cd ${identifier}.SAFE

    metadata="$(  find . -maxdepth 1 -name "S2A*.xml" )"
 
    [ -z "${metadata}" ] && return ${ERR_NO_METADATA}

    counter=0

    gdalinfo ${metadata} 2> /dev/null | grep -E  "SUBDATASET_._NAME" \
      | grep -v "PREVIEW" | cut -d "=" -f 2 | while read subset
    do 
      ciop-log "INFO" "Process ${subset}"
      gdal_translate \
        ${subset} \
        ${identifier}_${counter}.TIF || return ${ERR_GDAL_TRANSLATE}

      for index in NDVI NDI45 MTCI MCARI GNDVI PSSRa S2REP IRECI CLD SCL SNW WVP
      do 
  	ciop-log "INFO" "Generating indice ${index}" 
        calcVegetation ${index} ${identifier}_${counter} || return $?
      done
   
      rm -f ${identifier}_${counter}.TIF    
 
      ciop-log "INFO" "Aggregating Level 2B components"
      # build gdal VRT will all vegetation indexes and selected single bands 
      # of Level 2A input product
      gdalbuildvrt \
        -separate \
        -q \
        -srcnodata "-9999" \
        -vrtnodata "-9999" \
        ${TMPDIR}/sen2vi.vrt \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_NDVI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_NDI45.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_MTCI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_MCARI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_GNDVI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_PSSRa.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_S2REP.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_IRECI.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_CLD.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_SCL.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_SNW.TIF \
        ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}_WVP.TIF \
        || return ${ERR_GDAL_VRT}

      updateVRTMetadata ${TMPDIR}/sen2vi.vrt 

      gdal_translate \
        ${TMPDIR}/sen2vi.vrt \
        ${TMPDIR}/${identifier}_${counter}.TIF || return ${ERR_GDAL_WARP}
    
      rm -f ${TMPDIR}/sen2vi.vrt
  
      l2b_identifier=$( echo ${identifier} | sed 's/MSIL2A/MSIL2B/' )
      mv ${TMPDIR}/${identifier}_${counter}.TIF ${TMPDIR}/${l2b_identifier}_${counter}.TIF  

      ciop-log "INFO" "Generating metadata"
      # enrich metadata
      updateMetadata \
        ${metadata} \
        ${TMPDIR}/${l2b_identifier}_${counter}.TIF \
        ${TMPDIR}/${l2b_identifier}_${counter}.TIF.gz.xml

      gzip ${TMPDIR}/${l2b_identifier}_${counter}.TIF
      
      ciop-log "INFO" "Publish Level 2 product ${l2b_identifier}_${counter}.TIF.gz"
      
      ciop-publish -m ${TMPDIR}/${l2b_identifier}_${counter}.TIF.gz \
        || return ${ERR_PUBLISH}
 
      ciop-publish -m ${TMPDIR}/${l2b_identifier}_${counter}.TIF.gz.xml \
        || return ${ERR_PUBLISH}

      rm -f ${TMPDIR}/${l2b_identifier}_${counter}.TIF*
      rm -fr ${TMPDIR}/${identifier}.SAFE/${identifier}_${counter}* 

      counter=$((counter+1))
    done
 
    cd ${TMPDIR}
    ciop-log "DEBUG" "Remove ${identifier}.SAFE"
    rm -fr ${identifier}.SAFE   
  done

}

cat | main || exit $?
